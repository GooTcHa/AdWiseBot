# GENERAL KEYBOARDS:
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

import config


async def get_start_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–∞–±–æ—Ç–∞‚úç', callback_data='looking_for_job'),
         InlineKeyboardButton(text='–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ãüë®‚Äçüíª', callback_data='looking_for_specialists')]
    ])


async def cancel_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', callback_data='cancel')]
    ])


async def delete_kbd():
    return None


async def get_specialists_ikb() -> InlineKeyboardMarkup:
    arr = []
    i = 0
    t = []
    for s in config.specialties:
        i += 1
        t.append(InlineKeyboardButton(text=s, callback_data=s))
        if i == 3:
            arr.append(t)
            t = []
            i = 0
    arr.append(t)
    return InlineKeyboardMarkup(inline_keyboard=arr)


async def get_abilities_ikb(spec: str) -> InlineKeyboardMarkup:
    arr = []
    i = 0
    t = []
    for s in config.abilities[spec]:
        i += 1
        t.append(InlineKeyboardButton(text=s, callback_data=s))
        if i == 3:
            arr.append(t)
            t = []
            i = 0
    arr.append(t)
    return InlineKeyboardMarkup(inline_keyboard=arr)


async def get_time_ikb() -> InlineKeyboardMarkup:
    arr = []
    i = 0
    t = []
    for s in config.times:
        i += 1
        t.append(InlineKeyboardButton(text=s, callback_data=s))
        if i == 3:
            arr.append(t)
            t = []
            i = 0
    arr.append(t)
    return InlineKeyboardMarkup(inline_keyboard=arr)


#
#
# WORKER KEYBOARDS
#
#
async def worker_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ú–æ—ë —Ä–µ–∑—é–º–µüìÑ', callback_data='worker_cv'),
             InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞üîç', callback_data='search_job')]
        ]
    )


async def cancel_enter_phone_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–µ –≤–≤–æ–¥–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', callback_data='cancel')]
    ])


async def get_worker_abilities_ikb(spec: str, bis=None) -> InlineKeyboardMarkup:
    if bis is None:
        bis = []
    arr = []
    i = 0
    t = []
    for s in config.abilities[spec]:
        if s not in bis:
            i += 1
            t.append(InlineKeyboardButton(text=s, callback_data=s))
            if i == 3:
                arr.append(t)
                t = []
                i = 0
    if len(bis) != 0:
        t.append(InlineKeyboardButton(text='–ë–æ–ª—å—à–µ –Ω–µ—Çüòâ', callback_data='stop'))
    arr.append(t)
    return InlineKeyboardMarkup(inline_keyboard=arr)


async def check_cv_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—åüíæ', callback_data='1'),
         InlineKeyboardButton(text='–ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å', callback_data='0')]
    ])


async def ask_to_edit_cv_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å‚öôÔ∏è', callback_data='change_cv'),
         InlineKeyboardButton(text='–ù–µ –∏–∑–º–µ–Ω—è—Ç—å‚ùå', callback_data='cancel_change_cv')]
    ])


async def worker_menu_button() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ú–µ–Ω—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞', callback_data='looking_for_job')]
        ]
    )


async def accept_offer_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—èüëã', callback_data='reply_to_offer'),
         InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å‚ùå', callback_data='decline_offer')]
    ])


async def afk_ikb(b) -> InlineKeyboardMarkup:
    if b:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text='–ù–µ —Ö–æ—á—Éüö´', callback_data='0')]
            ]
        )
    else:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text='–•–æ—á—É –ø–æ–ª—É—á–∞—Ç—åüì©', callback_data='1')]
            ]
        )


#
#
# CLIENT KEYBOARDS
#
#
async def client_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ãüìã', callback_data='client_projects'),
             InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Çüõ†', callback_data='create_project')],
            [InlineKeyboardButton(text='–ü–æ–∏—Å–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤üîé', callback_data='search_spec')]
        ]
    )


async def client_menu_button() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ú–µ–Ω—é –∑–∞–∫–∞–∑—á–∏–∫–∞', callback_data='looking_for_specialists')]
        ]
    )


async def ask_create_project() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—åüÜï', callback_data='1'),
             InlineKeyboardButton(text='–ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å‚ùå', callback_data='0')]
        ]
    )


async def ask_buy_max() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å‚úçÔ∏è', callback_data='buy_max'),
             InlineKeyboardButton(text='–ù–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å', callback_data='cancel')]
        ]
    )


async def buy_subscription() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å‚úçÔ∏è', callback_data='buy_subscription')]
        ]
    )


async def choose_project() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å‚úçÔ∏è', callback_data='buy_subscription')]
        ]
    )


async def project_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='<', callback_data='-1'),
             InlineKeyboardButton(text='>', callback_data='+1')],
            [InlineKeyboardButton(text='–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ãüîé', callback_data='project_specialists')],
            [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')]
        ]
    )


async def project_list() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='<', callback_data='-1'),
             InlineKeyboardButton(text='>', callback_data='+1')],
            [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Çüóë', callback_data='delete')],
            [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')]
        ]
    )


async def delete_project_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–î–∞', callback_data='1'),
             InlineKeyboardButton(text='–ù–µ—Ç', callback_data='0')]
        ]
    )


async def specialists_list_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='<', callback_data='-1'),
             InlineKeyboardButton(text='>', callback_data='+1')],
            [InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å‚úÖ', callback_data='choose_specialist')],
            [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')]
        ]
    )


#
#
# ADMINS KEYBOARDS
#
#
async def accept_project_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å', callback_data='accept_project'),
             InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='decline_project')]
        ]
    )


async def accept_cv_ikb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å', callback_data='accept_cv'),
             InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='decline_cv')]
        ]
    )
